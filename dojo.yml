id: software-exploitation
name: Software Exploitation
description: |
  TODO: say something cool about software exploitation.

type: topic

modules:
- id: return-oriented-programming
  name: Return Oriented Programming
  description: TODO
  challenges:
  - id: level-1-0
    name: level1.0
    description: "TODO"
  - id: level-1-1
    name: level1.1
    description: "TODO"
  - id: level-2-0
    name: level2.0
    description: "TODO"
  - id: level-2-1
    name: level2.1
    description: "TODO"
  - id: level-3-0
    name: level3.0
    description:  "TODO"
  - id: level-3-1
    name: level3.1
    description:  "TODO"
  - id: level-4-0
    name: level4.0
    description:  "TODO"
  - id: level-4-1
    name: level4.1
    description:  "TODO"
  - id: level-5-0
    name: level5.0
    description: "TODO"
  - id: level-5-1
    name: level5.1
    description: TODO
  - id: level-6-0
    name: level6.0
    description: TODO
  - id: level-6-1
    name: level6.1
    description: TODO
  - id: level-7-0
    name: level7.0
    description: TODO
  - id: level-7-1
    name: level7.1
    description: TODO
  - id: level-8-0
    name: level8.0
    description: TODO
  - id: level-8-1
    name: level8.1
    description: TODO
  - id: level-9-0
    name: level9.0
    description: TODO
  - id: level-9-1
    name: level9.1
    description: TODO
  - id: level-10-0
    name: level10.0
    description: TODO
  - id: level-10-1
    name: level10.1
    description: TODO
  - id: level-11-0
    name: level11.0
    description: TODO
  - id: level-11-1
    name: level11.1
    description: TODO
  - id: level-12-0
    name: level12.0
    description: TODO
  - id: level-12-1
    name: level12.1
    description: TODO
  - id: level-13-0
    name: level13.0
    description: TODO
  - id: level-13-1
    name: level13.1
    description: TODO
  - id: level-14-0
    name: level14.0
    description: TODO
  - id: level-14-1
    name: level14.1
    description: TODO
  - id: level-15-0
    name: level15.0
    description: TODO
  - id: level-15-1
    name: level15.1
    description: TODO
  resources:
  - name: "Return Oriented Programming: Introduction"
    type: lecture
    video: El8-vMDJ1zY
    playlist: PL-ymxv0nOtqo0fRmVHxeOoKHX6ncNWp06
    slides: 1OM8gd6oqiFl2tU6G-ydiCfkNhgUTNKDFoYz-g2IIwHg
  - name: "Return Oriented Programming: Binary Lego"
    type: lecture
    video: L0gzNhbnOUA
    playlist: PL-ymxv0nOtqo0fRmVHxeOoKHX6ncNWp06
    slides: 1axSooHyjCJulwGNrhYM2GyjWJBSxTAg9Ia9Jpw9gW6s
  - name: "Return Oriented Programming: Techniques"
    type: lecture
    video: OVkObKS0gOo
    playlist: PL-ymxv0nOtqo0fRmVHxeOoKHX6ncNWp06
    slides: 1x7PASDmpjPDXvkD9HmZ2wC2JJNT8lHCkZTYcDQ9CjAk
  - name: "Return Oriented Programming: Complications"
    type: lecture
    video: Iq2IFCKDpKc
    playlist: PL-ymxv0nOtqo0fRmVHxeOoKHX6ncNWp06
    slides: 12_ymnKrYPUD1rJz6tauS2oNw45eWivhYMWfUzsnOeHM
  - name: "Robert's Extended Q&A (2023.01.11)"
    type: lecture
    video: 11KN0aQ8J_I
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey
  - name: "Robert's Extended Q&A (2023.01.18)"
    type: lecture
    video: qp9y7rAlrEI
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey

- id: format-string-exploits
  name: Format String Exploits
  description: TODO
  challenges:
  - id: level-1-0
    name: Level1.0
    description: use a format string exploit to reveal a string stored on the stack
  - id: level-1-1
    name: Level1.1
    description: use a formatstring exploit to reveal a string stored on the stack
  - id: level-2-0
    name: Level2.0
    description: use a format string exploit to reveal a string stored on the stack
  - id: level-2-1
    name: Level2.1
    description: use a format string exploit to reveal a string stored on the stack
  - id: level-3-0
    name: Level3.0
    description: use a format string exploit to read the flag directly from the .bss section
  - id: level-3-1
    name: Level3.1
    description: use a format string exploit to read the flag directly from the .bss section
  - id: level-4-0
    name: Level4.0
    description: use a format string exploit to set a global variable
  - id: level-4-1
    name: Level4.1
    description: use a format string exploit to set a global variable
  - id: level-5-0
    name: Level5.0
    description: use a format string exploit to set a larger global variable
  - id: level-5-1
    name: Level5.1
    description: use a format string exploit to set a larger global variable
  - id: level-6-0
    name: Level6.0
    description: use a format string exploit to copy a value and overwrite a global variable
  - id: level-6-1
    name: Level6.1
    description: use a format string exploit to copy a value and overwrite a global variable
  - id: level-7-0
    name: Level7.0
    description: use a format string exploit to overwrite a got entry
  - id: level-7-1
    name: Level7.1
    description: use a format string exploit to overwrite a got entry
  - id: level-8-0
    name: Level8.0
    description: use a format string exploit to call win
  - id: level-8-1
    name: Level8.1
    description: use a format string exploit to call win
  - id: level-9-0
    name: Level9.0
    description: use a format string exploit to call win.  this time, with no loop.
  - id: level-9-1
    name: Level9.1
    description: use a format string exploit to call win.  this time, with no loop.
  - id: level-10-0
    name: Level10.0
    description: chain a format string exploit into rop
  - id: level-10-1
    name: Level10.1
    description: chain a format string exploit into rop
  - id: level-11-0
    name: Level11.0
    description: chain a format string exploit into rop, now with pie!
  - id: level-11-1
    name: Level11.1
    description: chain a format string exploit into rop, now with pie!
  - id: level-12-0
    name: Level12.0
    description: Chain a format string exploit into ROP, now with pie and input filtering!
  - id: level-12-1
    name: Level12.1
    description: Chain a format string exploit into ROP, now with pie and input filtering!
  resources:
  - name: "Format String Exploits: Introduction"
    type: lecture
    video: vc_9Ujkpy7I
    playlist: PL-ymxv0nOtqrXNPl1I6qnRZpC35KC_Bxc
    slides: 1jSlEFa2CcmV0uovFfjWn-M_PTyqpkQlFfRsCWwFPMlQ
  - name: "Format String Exploits: Leaking Data"
    type: lecture
    video: l8jGa_B7wvM
    playlist: PL-ymxv0nOtqrXNPl1I6qnRZpC35KC_Bxc
    slides: 1gpyS-uiKvubsLhVdXjynxfrRpNrJ3txaeypHMxJ0YtQ
  - name: "Format String Exploits: Writing Data"
    type: lecture
    video: QOgD3jPHyRY
    playlist: PL-ymxv0nOtqrXNPl1I6qnRZpC35KC_Bxc
    slides: 1NoZu5nTJY8407daGT0xOOO1ofn9OBzfCu-n0w_-Hohw
  - name: Autogenerated tips and tricks from the discord channel
    type: markdown
    content: |
          This material was generated by ChatGPT-4 from a transcript of the Discord help channel for this module.
          
          - When dealing with format string challenges, it's important to understand the difference between `%n`, `%hn`, and `%hhn`. Each one has its purpose, and depending on the size of the data you want to write, one might be more suitable than the others.
          - In some cases, you might need to overwrite only a single byte of a return address to achieve the desired result. Be creative and look for opportunities to use this technique.
          - Consider using the `$` specifier to write to pointers on the stack if the challenge allows it. This can be helpful for modifying the return address in some situations.
          - Pwntools is a powerful library for dealing with format strings, but it might not always work perfectly for every scenario.
            If you encounter issues with it, consider simplifying your approach and building up the solution manually. Pwntools has useful functions like `fmtstr_payload()` and `leak_stack()`, which can be helpful in building your payload.
          - When attempting to solve more difficult format string challenges, it's crucial to understand how stack addresses work and how they can change during runtime. In some cases, overwriting a whole address might not be an option due to a lack of leaks.
          - For some challenges, the intended solution might involve using tricks or techniques that are not strictly related to format string payloads. Be open to exploring new ideas and approaches to find the solution.
          - It's possible that there are multiple ways to solve a challenge, especially when it comes to ROP (Return-Oriented Programming). Don't be afraid to discuss and compare solutions with others to learn new techniques.
          - When dealing with more complex challenges, remember that theory and practice might differ. Keep testing and refining your ideas until you find a working solution.
          - Finally, don't hesitate to ask for help and collaborate with others. Sharing knowledge and discussing solutions can lead to a deeper understanding of the subject and help you become more proficient in solving cybersecurity challenges.

- id: file-struct-exploits
  name: File Struct exploits
  description: TODO
  challenges:
  - id: level-1
    name: level1
    description: Harness the power of FILE structs to arbitrarily read data.
  - id: level-2
    name: level2
    description: Harness the power of FILE structs to arbitrarily write data to bypass a security check.
  - id: level-3
    name: level3
    description: Harness the power of FILE structs to redirect data output
  - id: level-4
    name: level4
    description: Harness the power of FILE structs to arbitrarily read/write data to hijack control flow.
  - id: level-5
    name: level5
    description: Abuse built-in FILE structs to leak sensitive information.
  - id: level-6
    name: level6
    description: Abuse built-in FILE structs to bypass a security check.
  - id: level-7
    name: level7
    description: Create a fake _wide_data struct to hijack control of the virtual function table of a FILE struct.
  - id: level-8
    name: level8
    description: Create a fake _wide_data struct to hijack control of the virtual function table of a FILE struct.
  - id: level-9
    name: level9
    description: Create a fake _wide_data struct to hijack control of the virtual function table of a built-in FILE struct.
  - id: level-10
    name: level10
    description: Create a fake _wide_data struct to hijack control of the virtual function table of a FILE struct.
  - id: level-11
    name: level11
    description: Apply FILE struct exploits to leak a secret value.
  - id: level-12
    name: level12
    description: Apply FILE struct exploits to write data to bypass a security check.
  - id: level-13
    name: level13
    description: Apply FILE struct exploits to write data and hijack control flow.
  - id: level-14
    name: level14
    description: Apply FILE struct exploits to write data to hijack control flow.. again?
  - id: level-15
    name: level15
    description: Apply FILE struct exploits to overwrite a GOT entry.
  - id: level-16
    name: level16
    description: Apply FILE struct exploits to overwrite a built-in FILE struct and print the flag.
  - id: level-17
    name: level17
    description: Apply FILE struct exploits to read/write data and capture the flag.
  - id: level-18
    name: level18
    description: Apply FILE struct exploits to arbitrarily read/write data or hijack control flow.
  - id: level-19
    name: level19
    description: Apply FILE struct exploits to arbitrarily read/write data or hijack control flow.
  - id: level-20
    name: level20
    description: Apply various FILE struct exploits to obtain a leak, then hijack hijack control flow.
  resources:
  - name: "File Structure Exploits: Introduction"
    type: lecture
    video: Y3apP4bInug
    playlist: PL-ymxv0nOtqrD-3LwVyyUu83kNJBI9RVL
    slides: 1zvGL92pojVSPkRHGhjTvAfyvYdEodYXDA0rTBNvXMjU
  - name: "File Structure Exploits: Arbitrary Read and Write"
    type: lecture
    video: Tv1Rss5Vqpk
    playlist: PL-ymxv0nOtqrD-3LwVyyUu83kNJBI9RVL
    slides: 149aANrvqmttaizMs_XGWh843DTNSd8Da9G50m3gwt5I
  - name: "File Structure Exploits: File_plus and the vtable"
    type: lecture
    video: vkUR58xxSFI
    playlist: PL-ymxv0nOtqrD-3LwVyyUu83kNJBI9RVL
    slides: 1Rs04LzYjD4eQ4_TJZCMDJMS8UNcpQ_OXcBpxzKpanC4

- id: dynamic-allocator-misuse
  name: Dynamic Allocator Misuse
  description: Explore exploiting the heap's thread caching layer, tcache.
  challenges:
  - id: level-1-0
    name: level1.0
    description: "Exploit a use-after-free vulnerability to get the flag."
  - id: level-1-1
    name: level1.1
    description: "Exploit a use-after-free vulnerability to get the flag."
  - id: level-2-0
    name: level2.0
    description: "Create and exploit a use-after-free vulnerability to get the flag."
  - id: level-2-1
    name: level2.1
    description: "Create and exploit a use-after-free vulnerability to get the flag."
  - id: level-3-0
    name: level3.0
    description: "Create and exploit a use-after-free vulnerability to get the flag when multiple allocations occur."
  - id: level-3-1
    name: level3.1
    description: "Create and exploit a use-after-free vulnerability to get the flag when multiple allocations occur."
  - id: level-4-0
    name: level4.0
    description: "Corrupt the TCACHE entry_struct to get the flag when multiple allocations occur."
  - id: level-4-1
    name: level4.1
    description: "Corrupt the TCACHE entry_struct to get the flag when multiple allocations occur."
  - id: level-5-0
    name: level5.0
    description: "Apply the TCACHE metadata in an unintended manner to set a value."
  - id: level-5-1
    name: level5.1
    description: "Apply the TCACHE metadata in an unintended manner to set a value."
  - id: level-6-0
    name: level6.0
    description: "Corrupt the TCACHE entry_struct to read unintended memory."
  - id: level-6-1
    name: level6.1
    description: "Corrupt the TCACHE entry_struct to read unintended memory."
  - id: level-7-0
    name: level7.0
    description: "Corrupt the TCACHE entry_struct to read unintended memory."
  - id: level-7-1
    name: level7.1
    description: "Corrupt the TCACHE entry_struct to read unintended memory."
  - id: level-8-0
    name: level8.0
    description: "Leverage TCACHE exploits to pass a validation check."
  - id: level-8-1
    name: level8.1
    description: "Leverage TCACHE exploits to pass a validation check."
  - id: level-9-0
    name: level9.0
    description: "Leverage TCACHE exploits to pass a validation check."
  - id: level-9-1
    name: level9.1
    description: "Leverage TCACHE exploits to pass a validation check."
  - id: level-10-0
    name: level10.0
    description: "Leverage TCACHE exploits to gain control flow."
  - id: level-10-1
    name: level10.1
    description: "Leverage TCACHE exploits to gain control flow."
  - id: level-11-0
    name: level11.0
    description: "Leverage TCACHE exploits to gain control flow."
  - id: level-11-1
    name: level11.1
    description: "Leverage TCACHE exploits to gain control flow."
  - id: level-12-0
    name: level12.0
    description: "Leverage TCACHE exploits to cause malloc() to return a stack pointer."
  - id: level-12-1
    name: level12.1
    description: "Leverage TCACHE exploits to cause malloc() to return a stack pointer."
  - id: level-13-0
    name: level13.0
    description: "Leverage calling free() on a stack pointer to read secret data."
  - id: level-13-1
    name: level13.1
    description: "Leverage calling free() on a stack pointer to read secret data."
  - id: level-14-0
    name: level14.0
    description: "Leverage TCACHE exploits to obtain the flag."
  - id: level-14-1
    name: level14.1
    description: "Leverage TCACHE exploits to obtain the flag."
  - id: level-15-0
    name: level15.0
    description: "Leverage TCACHE exploits to obtain the flag."
  - id: level-15-1
    name: level15.1
    description: "Leverage TCACHE exploits to obtain the flag."
  - id: level-16-0
    name: level16.0
    description: "Revisit a prior challenge, now with TCACHE safe-linking."
  - id: level-16-1
    name: level16.1
    description: "Revisit a prior challenge, now with TCACHE safe-linking."
  - id: level-17-0
    name: level17.0
    description: "Revisit a prior challenge, now with TCACHE safe-linking."
  - id: level-17-1
    name: level17.1
    description: "Revisit a prior challenge, now with TCACHE safe-linking."
  - id: level-18-0
    name: level18.0
    description: "Revisit a prior challenge, now with TCACHE safe-linking."
  - id: level-18-1
    name: level18.1
    description: "Revisit a prior challenge, now with TCACHE safe-linking."
  - id: level-19-0
    name: level19.0
    description: "Leverage overlapping allocations to obtain the flag."
  - id: level-19-1
    name: level19.1
    description: "Leverage overlapping allocations to obtain the flag."
  - id: level-20-0
    name: level20.0
    description: "16 bytes and a dream."
  - id: level-20-1
    name: level20.1
    description: "16 bytes and a dream."
  resources:
  - name: "Dynamic Allocator Misuse: What is the Heap?"
    type: lecture
    video: coAJ4KyrWmY
    playlist: PL-ymxv0nOtqr4OchXR2rV_WNhpj4ccPq1
    slides: 16XMoNQQB_jP0odRvQFhgMi3Neo9VR0g1jBvBXKYBnh0
  - name: "Dynamic Allocator Misuse: Dangers"
    type: lecture
    video: Cr9IeGQxFoc
    playlist: PL-ymxv0nOtqr4OchXR2rV_WNhpj4ccPq1
    slides: 1T5XruKzTxlpslT50op_wxvFsnsa4gshIM0Tue1f8zc4
  - name: "Dynamic Allocator Misuse: tcache"
    type: lecture
    video: 0jHtqqdVv1Y
    playlist: PL-ymxv0nOtqr4OchXR2rV_WNhpj4ccPq1
    slides: 13NbUlNvj1Rm-Cc_E_Crp678c-mgzCi0BYfzXIzFB3zI
  - name: "Dynamic Allocator Misuse: Chunks and Metadata"
    type: lecture
    video: osFevdDR0Xw
    playlist: PL-ymxv0nOtqr4OchXR2rV_WNhpj4ccPq1
    slides: 1BlapIDslDaWeBPUamdG0i35-yveGvWJHZaW_0dan6sU
  - name: "Dynamic Allocator Misuse: Metadata Corruption"
    type: lecture
    video: PtpPcGcX020
    playlist: PL-ymxv0nOtqr4OchXR2rV_WNhpj4ccPq1
    slides: 14SYq0TTVxEGWHNUG1BP66A8liPDD2pqJUs2WrXlCZNE
  - name: "Dynamic Allocator Misuse: Safe-Linking"
    type: lecture
    video: TOQ_QtjpbnA
    playlist: PL-ymxv0nOtqr4OchXR2rV_WNhpj4ccPq1
    slides: 1TfwQjqDUFwnhp4pm0W5gFZsTIJO92xtemrp66z-afIM
  - name: "Robert's Extended Q&A (2023.02.22)"
    type: lecture
    video: 7aFyWPLyo5A
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey
  - name: "Robert's Office Hours (2023.02.24)"
    type: lecture
    video: Gr6-aibC2DM
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey
  - name: "Robert's Extended Q&A (2023.03.01)"
    type: lecture
    video: x-7U9yz3Heg
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey
  - name: "Robert's Office Hours (2023.03.03)"
    type: lecture
    video: _wXJ0HPphWk
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey

- id: memory-mastery
  name: Exploitation Primitives and Memory Mastery
  description: Create and use exploitation primitives to master navigating memory!
  challenges:
  - id: level-1-0
    name: level1.0
    description: "Create and use arbitrary read primitives to read from the .bss."
  - id: level-1-1
    name: level1.1
    description: "Create and use arbitrary read primitives to read from the .bss."
  - id: level-2-0
    name: level2.0
    description: "Create and use arbitrary read primitives to read from a thread's heap."
  - id: level-2-1
    name: level2.1
    description: "Create and use arbitrary read primitives to read from a thread's heap."
  - id: level-3-0
    name: level3.0
    description: "Create and use arbitrary read primitives to read from a thread's stack."
  - id: level-3-1
    name: level3.1
    description: "Create and use arbitrary read primitives to read from a thread's stack."
  - id: level-4-0
    name: level4.0
    description: "Create and use arbitrary read primitives to read from the .bss, now with PIE."
  - id: level-4-1
    name: level4.1
    description: "Create and use arbitrary read primitives to read from the .bss, now with PIE."
  - id: level-5-0
    name: level5.0
    description: "Create and use arbitrary read primitives to read from the environment."
  - id: level-5-1
    name: level5.1
    description: "Create and use arbitrary read primitives to read from the environment."
  - id: level-6-0
    name: level6.0
    description: "Create and use arbitrary read primitives to read from the main heap."
  - id: level-6-1
    name: level6.1
    description: "Create and use arbitrary read primitives to read from the main heap."
  - id: level-7-0
    name: level7.0
    description: "Create and use arbitrary read/write primitives to obtain the flag."
  - id: level-7-1
    name: level7.1
    description: "Create and use arbitrary read/write primitives to obtain the flag."
  - id: level-8-0
    name: level8.0
    description: "Create and use arbitrary read/write primitives to obtain the flag."
  - id: level-8-1
    name: level8.1
    description: "Create and use arbitrary read/write primitives to obtain the flag."
  - id: level-9-0
    name: level9.0
    description: "Create and use arbitrary read/write primitives with less control of the heap."
  - id: level-9-1
    name: level9.1
    description: "Create and use arbitrary read/write primitives with less control of the heap."
  - id: level-10-0
    name: level10.0
    description: "Create and use arbitrary read/write primitives with less control of the heap II."
  - id: level-10-1
    name: level10.1
    description: "Create and use arbitrary read/write primitives with less control of the heap II."
  resources:
  - name: "Advanced Exploitation: Introduction"
    type: lecture
    video: s7DCT9qccYc
    playlist: PL-ymxv0nOtqoeZ2n5AcYjv-CzJ64V4Yyu
    slides: 1uHpo78FQVv8RaPe0IVUMXRBouBau6j4JFgx3_1-_wIw
  - name: "Advanced Exploitation: Heap Address Disclosure via Race Conditions"
    type: lecture
    video: LFlsuBF-s7g
    playlist: PL-ymxv0nOtqoeZ2n5AcYjv-CzJ64V4Yyu
    slides: 1Nh47gCskB3Cr1d6Yr1Q8RWwt2p8DlHvJbwgSs-3m4kA
  - name: "Advanced Exploitation: In-Memory Forensics"
    type: lecture
    video: WElEwa1pXCw
    playlist: PL-ymxv0nOtqoeZ2n5AcYjv-CzJ64V4Yyu
    slides: 1UY3GniieKBiphekH_RmkghYdm5M5DBNklHCxfN2S62A
  - name: "Advanced Exploitation: Exploit Primitives"
    type: lecture
    video: PY9fNJel-X8
    playlist: PL-ymxv0nOtqoeZ2n5AcYjv-CzJ64V4Yyu
    slides: 1fMVQqCeNioayny-oUd3uYFNzkyHDz3u-B8f_JiJtf6Y
  - name: "Advanced Exploitation: End-to-End Pwnage"
    type: lecture
    video: okLF1WnbV4M
    playlist: PL-ymxv0nOtqoeZ2n5AcYjv-CzJ64V4Yyu
    slides: 1Q6ZjNq7VeU08Tba5uWkgJy6IMH5sDT8jCW1d8vmau4M
  - name: "Robert's Extended Q&A (2023.03.15)"
    type: lecture
    video: gPHc-kUk3Vg
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey
  - name: "Robert's Office Hours (2023.03.17)"
    type: lecture
    video: UYo14243Juo
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey
  - name: "Robert's Extended Q&A (2023.03.22)"
    type: lecture
    video: XCvyHprtsyk
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey
  - name: "Robert's Office Hours (2023.03.24)"
    type: lecture
    video: fC6bb7kPtGs
    playlist: PL-ymxv0nOtqqyCaGZJCTBJTdzI2QLWZey
  - name: Further Reading
    type: markdown
    content: |
      - A short read on some methods used in [pivoting around memory](https://blog.osiris.cyber.nyu.edu/2019/04/06/pivoting-around-memory/).
modules:
- id: dynamic-allocator-pt2
  name: Dynamic Allocator Exploitation
  description: Explore exploiting the heap beyond tcache.
  challenges:
  - id: level-1-0
    name: level1.0
    description: "Leverage consolidation to obtain the flag."
  - id: level-1-1
    name: level1.1
    description: "Leverage consolidation to obtain the flag."
  - id: level-2-0
    name: level2.0
    description: "Leverage consolidation to obtain the flag."
  - id: level-2-1
    name: level2.1
    description: "Leverage consolidation to obtain the flag."
  - id: level-3-0
    name: level3.0
    description: "Leverage consolidation to obtain the flag."
  - id: level-3-1
    name: level3.1
    description:  "Leverage consolidation to obtain the flag."
  - id: level-4-0
    name: level4.0
    description: "Perform an advanced heap exploit to obtain the flag"
  - id: level-4-1
    name: level4.1
    description: "Perform an advanced heap exploit to obtain the flag"
  - id: level-5-0
    name: level5.0
    description: "Perform an advanced heap exploit to obtain the flag"
  - id: level-5-1
    name: level5.1
    description: "Perform an advanced heap exploit to obtain the flag"
  resources:
  - name: "Dynamic Allocator II - Beyond tcache"
    type: lecture
    video: pN99hwq8qUE
    playlist: PL-ymxv0nOtqrJBBFw-B5cKGYoAtrw49cP
    slides: 13DM0BwhHjc1qqybzLDX4Ea9kArf3BeNYTz3QP_6h0bM
  - name: "Dynamic Allocator II - The Bins"
    type: lecture
    video: _dqBXYEUQXM
    playlist: PL-ymxv0nOtqrJBBFw-B5cKGYoAtrw49cP
    slides: 1R56RcNylZs73mjbNutdW82cRZwORVwki9i-TqVhyuOY
  - name: "Dynamic Allocator II - Exploitation"
    type: lecture
    video: P2__SxA1P9I
    playlist: PL-ymxv0nOtqrJBBFw-B5cKGYoAtrw49cP
    slides: 1ZPK8W9cWBaljguMbxpaQaHo_qr8Ps41za-FSFIwq38M
